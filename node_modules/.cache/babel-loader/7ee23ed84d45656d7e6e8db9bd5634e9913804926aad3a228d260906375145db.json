{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\lockedinaii\\\\src\\\\reusable_components\\\\header\\\\header.jsx\",\n  _s = $RefreshSig$();\nimport './header.css';\nimport { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"\\uD83D\\uDD17 LockedIn AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            variant: \"secondary\",\n            checked: checked,\n            value: \"1\",\n            onChange: e => setChecked(e.currentTarget.checked),\n            children: \"Checked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"mb-2\",\n          children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${idx}`,\n            type: \"radio\",\n            variant: \"secondary\",\n            name: \"radio\",\n            value: radio.value,\n            checked: radioValue === radio.value,\n            onChange: e => setRadioValue(e.currentTarget.value),\n            children: radio.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          className: \"mb-2\",\n          id: \"toggle-check\",\n          type: \"checkbox\",\n          variant: \"outline-primary\",\n          checked: checked,\n          value: \"1\",\n          onChange: e => setChecked(e.currentTarget.checked),\n          children: \"Checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${idx}`,\n            type: \"radio\",\n            variant: idx % 2 ? 'outline-success' : 'outline-danger',\n            name: \"radio\",\n            value: radio.value,\n            checked: radioValue === radio.value,\n            onChange: e => setRadioValue(e.currentTarget.value),\n            children: radio.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"u8HBHezDv6+Ud4vmWbnEkotqWsM=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useState","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","checked","setChecked","radioValue","setRadioValue","radios","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","variant","onChange","e","currentTarget","map","radio","idx","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/lockedinaii/src/reusable_components/header/header.jsx"],"sourcesContent":["import './header.css'\r\nimport { useState } from 'react';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction Header () {\r\nconst [checked, setChecked] = useState(false);\r\n  const [radioValue, setRadioValue] = useState('1');\r\n\r\n  const radios = [\r\n    { name: 'Active', value: '1' },\r\n    { name: 'Radio', value: '2' },\r\n    { name: 'Radio', value: '3' },\r\n  ];\r\n\r\n    return(\r\n        <div className = 'main-header' >\r\n    <div className = 'header'>\r\n        \r\n    <span className = 'dot'></span>\r\n        \r\n         <div className=\"logo\">\r\n        ðŸ”— LockedIn AI\r\n        </div>\r\n  \r\n    <>\r\n      <ButtonGroup className=\"mb-2\">\r\n        <ToggleButton\r\n          id=\"toggle-check\"\r\n          type=\"checkbox\"\r\n          variant=\"secondary\"\r\n          checked={checked}\r\n          value=\"1\"\r\n          onChange={(e) => setChecked(e.currentTarget.checked)}\r\n        >\r\n          Checked\r\n        </ToggleButton>\r\n      </ButtonGroup>\r\n      <br />\r\n      <ButtonGroup className=\"mb-2\">\r\n        {radios.map((radio, idx) => (\r\n          <ToggleButton\r\n            key={idx}\r\n            id={`radio-${idx}`}\r\n            type=\"radio\"\r\n            variant=\"secondary\"\r\n            name=\"radio\"\r\n            value={radio.value}\r\n            checked={radioValue === radio.value}\r\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n          >\r\n            {radio.name}\r\n          </ToggleButton>\r\n        ))}\r\n      </ButtonGroup>\r\n      <br />\r\n      <ToggleButton\r\n        className=\"mb-2\"\r\n        id=\"toggle-check\"\r\n        type=\"checkbox\"\r\n        variant=\"outline-primary\"\r\n        checked={checked}\r\n        value=\"1\"\r\n        onChange={(e) => setChecked(e.currentTarget.checked)}\r\n      >\r\n        Checked\r\n      </ToggleButton>\r\n      <br />\r\n      <ButtonGroup>\r\n        {radios.map((radio, idx) => (\r\n          <ToggleButton\r\n            key={idx}\r\n            id={`radio-${idx}`}\r\n            type=\"radio\"\r\n            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n            name=\"radio\"\r\n            value={radio.value}\r\n            checked={radioValue === radio.value}\r\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n          >\r\n            {radio.name}\r\n          </ToggleButton>\r\n        ))}\r\n      </ButtonGroup>\r\n    </>\r\n        <span className = 'dot'></span>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}