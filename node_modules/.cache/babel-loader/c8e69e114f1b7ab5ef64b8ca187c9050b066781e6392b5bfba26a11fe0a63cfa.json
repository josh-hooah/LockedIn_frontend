{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\lockedinaii\\\\src\\\\pages\\\\dashboard\\\\taskContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create a context to hold task data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      setTasks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the task context\n_s(TaskProvider, \"KErTypNiQPGiOubPekX82elbbt0=\");\n_c = TaskProvider;\nexport const useTasks = () => {\n  _s2();\n  return useContext(TaskContext);\n};\n_s2(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTasks","_s2","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/lockedinaii/src/pages/dashboard/taskContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// Create a context to hold task data\r\nconst TaskContext = createContext();\r\n\r\n// Create a provider component\r\nexport const TaskProvider = ({ children }) => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <TaskContext.Provider value={{ tasks, setTasks }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n\r\n// Create a custom hook to use the task context\r\nexport const useTasks = () => useContext(TaskContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAf,EAAA,CAjBaF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAkBzB,OAAO,MAAMmB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACK,WAAW,CAAC;AAAA;AAACqB,GAAA,CAAzCD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}