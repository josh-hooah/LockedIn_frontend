{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\lockedinaii\\\\src\\\\pages\\\\dashboard\\\\settask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Paper, Box, Typography, Grid } from \"@mui/material\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n\n  // Calculate the stats for the tasks\n  const finishedTasks = tasks.filter(task => task.completed && new Date(task.dueDate) >= new Date());\n  const failedTasks = tasks.filter(task => !task.completed && new Date(task.dueDate) < new Date());\n  const totalTasks = tasks.length;\n\n  // Calculate the productivity level\n  const productivityLevel = totalTasks > 0 ? (totalTasks - failedTasks.length) / totalTasks * 100 : 0;\n\n  // Data for the chart\n  const chartData = [[\"Task Type\", \"Count\"], [\"Finished Tasks\", finishedTasks.length], [\"Failed Tasks\", failedTasks.length], [\"Unfinished Tasks\", totalTasks - (finishedTasks.length + failedTasks.length)]];\n  const chartOptions = {\n    title: \"Task Overview\",\n    is3D: true,\n    slices: {\n      0: {\n        offset: 0.1,\n        color: \"#4caf50\"\n      },\n      // Finished task (green)\n      1: {\n        offset: 0.1,\n        color: \"#f44336\"\n      },\n      // Failed task (red)\n      2: {\n        offset: 0.1,\n        color: \"#ff9800\"\n      } // Unfinished task (orange)\n    },\n    legend: {\n      position: \"labeled\"\n    },\n    tooltip: {\n      trigger: \"selection\" // Show the tooltip when a slice is selected\n    },\n    pieSliceText: \"percentage\",\n    // Display percentage on the chart\n    chartArea: {\n      width: \"100%\",\n      height: \"75%\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome Back! \", prop.user, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Dashboard Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Finished Tasks: \", finishedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Failed Tasks: \", failedTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Unfinished Tasks: \", totalTasks - (finishedTasks.length + failedTasks.length)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            chartType: \"PieChart\",\n            data: chartData,\n            options: chartOptions,\n            width: \"100%\",\n            height: \"300px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: \"center\",\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Productivity Level: \", productivityLevel.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DFAqgI4dFWvGCDu9GYrojKg2TFI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Box","Typography","Grid","Chart","jsxDEV","_jsxDEV","Dashboard","user","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","finishedTasks","filter","task","completed","Date","dueDate","failedTasks","totalTasks","length","productivityLevel","chartData","chartOptions","title","is3D","slices","offset","color","legend","position","tooltip","trigger","pieSliceText","chartArea","width","height","maxWidth","children","prop","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","p","my","variant","align","gutterBottom","display","justifyContent","mb","container","spacing","item","xs","sm","md","chartType","data","options","textAlign","mt","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/lockedinaii/src/pages/dashboard/settask.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Paper, Box, Typography, Grid } from \"@mui/material\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nconst Dashboard = ({user}) => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n\r\n  // Calculate the stats for the tasks\r\n  const finishedTasks = tasks.filter(task => task.completed && new Date(task.dueDate) >= new Date());\r\n  const failedTasks = tasks.filter(task => !task.completed && new Date(task.dueDate) < new Date());\r\n  const totalTasks = tasks.length;\r\n\r\n  // Calculate the productivity level\r\n  const productivityLevel = totalTasks > 0 ? ((totalTasks - failedTasks.length) / totalTasks) * 100 : 0;\r\n\r\n  // Data for the chart\r\n  const chartData = [\r\n    [\"Task Type\", \"Count\"],\r\n    [\"Finished Tasks\", finishedTasks.length],\r\n    [\"Failed Tasks\", failedTasks.length],\r\n    [\"Unfinished Tasks\", totalTasks - (finishedTasks.length + failedTasks.length)],\r\n  ];\r\n\r\n  const chartOptions = {\r\n    title: \"Task Overview\",\r\n    is3D: true,\r\n    slices: {\r\n      0: { offset: 0.1, color: \"#4caf50\" }, // Finished task (green)\r\n      1: { offset: 0.1, color: \"#f44336\" }, // Failed task (red)\r\n      2: { offset: 0.1, color: \"#ff9800\" }, // Unfinished task (orange)\r\n    },\r\n    legend: {\r\n      position: \"labeled\", \r\n    },\r\n    tooltip: {\r\n      trigger: \"selection\", // Show the tooltip when a slice is selected\r\n    },\r\n    pieSliceText: \"percentage\", // Display percentage on the chart\r\n    chartArea: {\r\n      width: \"100%\",\r\n      height: \"75%\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <h3>Welcome Back! {prop.user} </h3>\r\n      <Paper elevation={3} sx={{ p: 3, my: 3 }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Dashboard Overview\r\n        </Typography>\r\n        \r\n        <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mb: 2 }}>\r\n          <Typography variant=\"h6\">Finished Tasks: {finishedTasks.length}</Typography>\r\n          <Typography variant=\"h6\">Failed Tasks: {failedTasks.length}</Typography>\r\n          <Typography variant=\"h6\">Unfinished Tasks: {totalTasks - (finishedTasks.length + failedTasks.length)}</Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={3} justifyContent=\"center\">\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Chart\r\n              chartType=\"PieChart\"\r\n              data={chartData}\r\n              options={chartOptions}\r\n              width={\"100%\"}\r\n              height={\"300px\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box sx={{ textAlign: \"center\", mt: 2 }}>\r\n          <Typography variant=\"h6\">\r\n            Productivity Level: {productivityLevel.toFixed(2)}%\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AACvE,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,MAAM;IACvC,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;;EAEF;EACA,MAAMK,aAAa,GAAGP,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,IAAI,IAAIC,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,IAAI,IAAID,IAAI,CAAC,CAAC,CAAC;EAClG,MAAME,WAAW,GAAGb,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,IAAI,IAAIC,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC;EAChG,MAAMG,UAAU,GAAGd,KAAK,CAACe,MAAM;;EAE/B;EACA,MAAMC,iBAAiB,GAAGF,UAAU,GAAG,CAAC,GAAI,CAACA,UAAU,GAAGD,WAAW,CAACE,MAAM,IAAID,UAAU,GAAI,GAAG,GAAG,CAAC;;EAErG;EACA,MAAMG,SAAS,GAAG,CAChB,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,CAAC,gBAAgB,EAAEV,aAAa,CAACQ,MAAM,CAAC,EACxC,CAAC,cAAc,EAAEF,WAAW,CAACE,MAAM,CAAC,EACpC,CAAC,kBAAkB,EAAED,UAAU,IAAIP,aAAa,CAACQ,MAAM,GAAGF,WAAW,CAACE,MAAM,CAAC,CAAC,CAC/E;EAED,MAAMG,YAAY,GAAG;IACnBC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE;MACN,CAAC,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAU,CAAC;MAAE;MACtC,CAAC,EAAE;QAAED,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAU,CAAC;MAAE;MACtC,CAAC,EAAE;QAAED,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAU,CAAC,CAAE;IACxC,CAAC;IACDC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,OAAO,EAAE;MACPC,OAAO,EAAE,WAAW,CAAE;IACxB,CAAC;IACDC,YAAY,EAAE,YAAY;IAAE;IAC5BC,SAAS,EAAE;MACTC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV;EACF,CAAC;EAED,oBACEnC,OAAA,CAACP,SAAS;IAAC2C,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBrC,OAAA;MAAAqC,QAAA,GAAI,gBAAc,EAACC,IAAI,CAACpC,IAAI,EAAC,GAAC;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC1C,OAAA,CAACN,KAAK;MAACiD,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,gBACvCrC,OAAA,CAACJ,UAAU;QAACmD,OAAO,EAAC,IAAI;QAACC,KAAK,EAAC,QAAQ;QAACC,YAAY;QAAAZ,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEb1C,OAAA,CAACL,GAAG;QAACuD,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,eAAe;QAACP,EAAE,EAAE;UAAEQ,EAAE,EAAE;QAAE,CAAE;QAAAf,QAAA,gBAC/DrC,OAAA,CAACJ,UAAU;UAACmD,OAAO,EAAC,IAAI;UAAAV,QAAA,GAAC,kBAAgB,EAAC1B,aAAa,CAACQ,MAAM;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC5E1C,OAAA,CAACJ,UAAU;UAACmD,OAAO,EAAC,IAAI;UAAAV,QAAA,GAAC,gBAAc,EAACpB,WAAW,CAACE,MAAM;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACxE1C,OAAA,CAACJ,UAAU;UAACmD,OAAO,EAAC,IAAI;UAAAV,QAAA,GAAC,oBAAkB,EAACnB,UAAU,IAAIP,aAAa,CAACQ,MAAM,GAAGF,WAAW,CAACE,MAAM,CAAC;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/G,CAAC,eAEN1C,OAAA,CAACH,IAAI;QAACwD,SAAS;QAACC,OAAO,EAAE,CAAE;QAACH,cAAc,EAAC,QAAQ;QAAAd,QAAA,eACjDrC,OAAA,CAACH,IAAI;UAAC0D,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAArB,QAAA,eAC9BrC,OAAA,CAACF,KAAK;YACJ6D,SAAS,EAAC,UAAU;YACpBC,IAAI,EAAEvC,SAAU;YAChBwC,OAAO,EAAEvC,YAAa;YACtBY,KAAK,EAAE,MAAO;YACdC,MAAM,EAAE;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEP1C,OAAA,CAACL,GAAG;QAACiD,EAAE,EAAE;UAAEkB,SAAS,EAAE,QAAQ;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAA1B,QAAA,eACtCrC,OAAA,CAACJ,UAAU;UAACmD,OAAO,EAAC,IAAI;UAAAV,QAAA,GAAC,sBACH,EAACjB,iBAAiB,CAAC4C,OAAO,CAAC,CAAC,CAAC,EAAC,GACpD;QAAA;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACvC,EAAA,CA7EIF,SAAS;AAAAgE,EAAA,GAAThE,SAAS;AA+Ef,eAAeA,SAAS;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}